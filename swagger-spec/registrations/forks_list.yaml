# /registrations/{registration_id}/forks
get:
  summary: List all forks
  description: >-

    A paginated list of the registrationâ€™s forks


    The returned forks are sorted by their `forked_date`, with the most recent forks appearing first.


    Forking a registration creates a copy of an existing registration and all of its contents.

    #### Returns

    Returns a JSON object containing `data` and `links` keys.


    The `data` key contains an array of up to 10 forks.
    If the current registration has no fork, the `data` key will contain an empty array.
    Each resource in the array is a separate registration object and contains the full representation of the registration's fork.


    The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

  parameters:
    - in: path
      type: string
      name: registration_id
      required: true
      description: 'The unique identifier of the registration.'
  tags:
    - Registrations
  operationId: registrations_forks_list
  x-response-schema: Registration
  responses:
    '200':
      description: 'OK'
      schema:
        type: array
        items:
          $ref: 'definition.yaml'
      examples:
        application/json:
          data:
          - relationships:
              files:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/files/
                    meta: {}
              view_only_links:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/view_only_links/
                    meta: {}
              citation:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/citation/
                    meta: {}
              registration_schema:
                links:
                  related:
                    href: https://api.osf.io/v2/metaschemas/564d31db8c5e4a7c9694b2c0/
                    meta: {}
              parent:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/wucr8/
                    meta: {}
              contributors:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/contributors/
                    meta: {}
              forks:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/forks/
                    meta: {}
              root:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/wucr8/
                    meta: {}
              identifiers:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/identifiers/
                    meta: {}
              comments:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/comments/?filter%5Btarget%5D=4cmnz
                    meta: {}
              registered_from:
                links:
                  related:
                    href: https://api.osf.io/v2/nodes/5wprs/
                    meta: {}
              registered_by:
                links:
                  related:
                    href: https://api.osf.io/v2/users/7xea5/
                    meta: {}
              linked_nodes:
                links:
                  self:
                    href: https://api.osf.io/v2/registrations/4cmnz/relationships/linked_nodes/
                    meta: {}
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/linked_nodes/
                    meta: {}
              wikis:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/wikis/
                    meta: {}
              affiliated_institutions:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/institutions/
                    meta: {}
              children:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/children/
                    meta: {}
              logs:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/logs/
                    meta: {}
            links:
              self: https://api.osf.io/v2/registrations/4cmnz/
              html: https://osf.io/4cmnz/
            attributes:
              registration_supplement: OSF-Standard Pre-Data Collection Registration
              pending_embargo_approval: false
              registration: true
              embargo_end_date:
              withdrawn: false
              withdrawal_justification:
              category: project
              preprint: false
              current_user_permissions:
              - read
              title: Full Project Description
              registered_meta:
                looked:
                  comments: []
                  value: 'No'
                  extra: []
                datacompletion:
                  comments: []
                  value: Yes, data collection is underway or complete
                  extra: []
                comments:
                  comments: []
                  value: Data collection for measurement time T1 is underway, but no data has
                    been collected for T2 (when menstrual cycle information will be assessed).
                    Therefore, data cannot be analysed at the time of preregistration.
                  extra: []
              public: true
              fork: false
              description: ''
              tags: []
              collection: false
              current_user_can_comment: false
              pending_registration_approval: false
              date_modified: '2016-05-23T14:22:03.885000'
              date_registered: '2016-05-23T14:24:25.478000'
              node_links:
                links:
                  related:
                    href: https://api.osf.io/v2/registrations/4cmnz/node_links/
                    meta: {}
              date_created: '2016-05-23T12:11:14.853000'
              pending_withdrawal: false
              node_license:
            type: registrations
            id: 4cmnz
          links:
            first:
            last:
            prev:
            next:
            meta:
              total: 1
              per_page: 10

post:
  summary: Create a fork
  description: >-
    Creates a fork of the given registration.


    Forking a project creates a copy of an existing registration and all of its contents.
    The fork always points back to the original registration, forming a network of registrations.


    You might use a fork to copy another's work to build on and extend.
    For example, a professor may create an OSF project of materials for individual student use.
    Each student forks the project to have his or her own copy of the materials to start his/her own work.


    When creating a fork, your fork will only contain public components of the current registration and components for which you are a contributor.
    Private components that you do not have access to will not be forked.

    #### Required

    There are no required attributes when creating a fork, as all of the forked registration's attributes will be copied from the current registration.


    The `title` field is optional, with the default title being "Fork of " prepended to the current registration's title.

    #### Returns

    Returns a JSON object with a `data` key containing the complete representation of the forked registration, if the request is successful.

    If the request is unsuccessful, an `errors` key containing information about the failure will be returned.
    Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

  parameters:
    - in: path
      type: string
      name: registration_id
      required: true
      description: 'The unique identifier of the registration.'
    - in: body
      name: body
      required: true
      # TODO: body example specific to forks -- i.e. nothing required
      schema:
        $ref: 'definition.yaml'
  tags:
    - Registrations
  operationId: registrations_forks_create
  consumes:
    - application/json
  x-response-schema: Registration
  responses:
    '201':
      description: 'Created'
