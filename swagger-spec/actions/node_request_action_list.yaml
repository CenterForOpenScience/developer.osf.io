# /actions/requests/nodes/
post:
  summary: Create a Node Request Action
  description: >
    Create a new action on an existing Node Request.

    Node Request Actions represent state transitions or comments on node-related requests,
    such as access or withdrawal requests. Actions document and facilitate moderation workflows
    for node requests managed through the OSF.

    #### Available Triggers

    Supported triggers for Node Request Actions include:
     - submit: Submit or resubmit the node request for review. No special permissions required.
     - accept: Approve the node request. Requires admin permissions.
     - reject: Reject the node request. Requires admin permissions.
     - edit_comment: Add or update a comment without changing the request’s state. Requires admin permissions.

    #### Permissions

    Permission checks are enforced based on the trigger:
     - Actions like accept, reject, and edit_comment require admin permissions on the target node.

    #### Returns

    On success, returns a 201 Created response with a data object representing the newly created
    Node Request Action.

    #### Errors

    Possible errors include:
     - 400 Bad Request: Invalid payload or missing required fields.
     - 403 Forbidden: Insufficient permissions to perform the requested action.
     - 409 Conflict: The trigger is invalid for the node request’s current state.

    Refer to [Errors and Error Codes](#tag/Errors-and-Error-Codes) for more details.

  tags:
    - Actions

  operationId: node_request_action_create

  consumes:
    - application/json
  produces:
    - application/json

  parameters:
    - in: body
      name: body
      required: true
      description: A JSON:API compliant payload describing the Node Request Action to create.
      schema:
        type: object
        required:
          - data
        properties:
          data:
            type: object
            required:
              - type
              - attributes
              - relationships
            properties:
              type:
                type: string
                enum:
                  - node-request-actions
                example: node-request-actions
              attributes:
                type: object
                required:
                  - trigger
                properties:
                  trigger:
                    type: string
                    enum:
                      - submit
                      - accept
                      - reject
                      - edit_comment
                    example: accept
                  comment:
                    type: string
                    example: Approving the node access request.
              relationships:
                type: object
                required:
                  - target
                properties:
                  target:
                    type: object
                    required:
                      - data
                    properties:
                      data:
                        type: object
                        required:
                          - type
                          - id
                        properties:
                          type:
                            type: string
                            enum:
                              - node-requests
                            example: node-requests
                          id:
                            type: string
                            example: nodeReq123

  responses:
    '201':
      description: Node Request Action successfully created.
      schema:
        $ref: 'definition.yaml'
      examples:
        application/json:
          data:
            id: nodeAction123
            type: node-request-actions
            attributes:
              trigger: accept
              comment: Approved node request.
              from_state: pending
              to_state: accepted
              date_created: '2024-03-13T15:30:00Z'
              date_modified: '2024-03-13T15:30:00Z'
              auto: false
              visible: true
            relationships:
              creator:
                links:
                  related:
                    href: 'https://api.osf.io/v2/users/user456/'
                    meta: {}
                data:
                  id: user456
                  type: users
              target:
                links:
                  related:
                    href: 'https://api.osf.io/v2/requests/nodes/nodeReq123/'
                    meta: {}
                data:
                  id: nodeReq123
                  type: node-requests
            links:
              self: 'https://api.osf.io/v2/actions/nodeAction123/'

    '400':
      description: Bad request. The payload is invalid or missing required fields.

    '403':
      description: Forbidden. You do not have permission to perform this action.

    '409':
      description: Conflict. Invalid state transition for the given trigger.
