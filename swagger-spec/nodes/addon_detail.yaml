# /nodes/{node_id}/addons/{provider}/
get:
  summary: Retrieve an addon
  description: >-
    Retrieve details of an individual addon connected to this node.

    #### Permissions

    NodeSettings that are attached to public nodes will give read-only access to everyone.
    Private nodes require explicit read permission. Write and admin access are the same for public and private nodes.
    Administrators on a parent node have implicit read permissions for all child nodes.

    Any users with write or admin access to the node are able to deauthorize an enabled addon, but only the addon authorizer is able to change the configuration (i.e. selected folder) of an already-configured NodeSettings entity.

    #### Returns

    Returns a JSON object with a `data` key containing the details of the requested
    addon, if the request is successful.


    If the request is unsuccessful, an `errors` key containing
    information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes)
    to understand why this request may have failed.

  parameters:
    - in: path
      type: string
      name: node_id
      required: true
      description: 'The unique identifier of the node.'
    - in: path
      type: string
      name: provider
      required: true
      description: 'The unique identifier of the addon.'
  tags:
    - Nodes
  operationId: nodes_addon_read
  x-response-schema: 'Addon'
  responses:
    '200':
      description: 'OK'
      schema:
        $ref: 'node_addon_definition.yaml'
      examples:
        application/json:
          data:
            links:
              self: http://api.osf.io/v2/nodes/gaz5n/addons/box/
            attributes:
              folder_path: null
              configured: false
              external_account_id: null
              folder_id: null
              node_has_auth: false
            type: node_addons
            id: box

patch:
  summary: Update an addon
  description: >-
    Updates a node addon by setting the values of the attributes specified in the request body.
    Any unspecified attributes will be left unchanged.


    Node addon can be updated with either a **PUT** or **PATCH** request.
    The `external_account_id`, `enabled`, and `folder_id` fields are mandatory in a **PUT**, and optional in **PATCH**.
    Non-string values will be accepted and stringified, however we make no promises about the stringification output.


    To delete or deauthorize a node addon, issue a **PUT** with all fields set to `null` or `False`, or a **PATCH** with enabled set `False`.

    #### Permissions

    NodeSettings that are attached to public nodes will give read-only access to everyone.
    Private nodes require explicit read permission. Write and admin access are the same for public and private nodes.
    Administrators on a parent node have implicit read permissions for all child nodes.

    Any users with write or admin access to the node are able to deauthorize an enabled addon, but only the addon authorizer is able to change the configuration (i.e. selected folder) of an already-configured NodeSettings entity.


    #### Returns

    Returns a JSON object with a `data` key containing the new representation of the updated
    node addon, if the request is successful.


    If the request is unsuccessful, an `errors` key containing information about the failure will be returned.
    Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.

  parameters:
    - in: path
      type: string
      name: node_id
      required: true
      description: 'The unique identifier of the node.'
    - in: path
      type: string
      name: provider
      required: true
      description: 'The unique identifier of the addon.'
    - in: body
      name: body
      required: true
      schema:
        type: object
        example:
          data:
            type: node_addons
            id: "{provider}"
            attributes:
              external_account_id: "{account_id}"
              folder_id: "{folder_id}"
              folder_path: "{folder_path}"
              url: "{url}"
              label: "{label}"


  tags:
    - Nodes
  operationId: nodes_node_addon_update
  consumes:
    - application/json
  responses:
    '200':
      description: 'OK'
