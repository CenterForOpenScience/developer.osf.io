# /nodes/{node_id}/addons/
get:
  summary: List all addons
  description: >-

    A paginated list of addons connected to the given node or project.

    #### Returns

    Returns a JSON object containing `data` and `links` keys.


    The `data` key contains an array of at most 10 addon objects.
    Each resource in the array is a separate addon object and contains the full representation of the addon, meaning additional requests to a addon's detail view are not necessary.


    The `links` key contains a dictionary of links that can be used for [pagination](#tag/Pagination).

  parameters:
  - in: path
    type: string
    name: node_id
    required: true
    description: 'The unique identifier of the node.'

  tags:
    - Nodes
  operationId: nodes_addons_list
  x-response-schema: 'Addon'
  responses:
    '200':
      description: OK
      schema:
        type: array
        items:
          $ref: '../addons/definition.yaml'
      examples:
        application/json:
          data:
          - links:
              self: http://api.osf.io/v2/nodes/gaz5n/addons/<provider_id>/
            attributes:
              folder_path:
              configured: false
              external_account_id:
              folder_id:
              node_has_auth: false
            type: node_addons
            id: <provider_id>
          - links:
              self: http://api.osf.io/v2/nodes/gaz5n/addons/<another_provider_id>/
            attributes:
              folder_path:
              configured: false
              external_account_id:
              folder_id:
              node_has_auth: false
            type: node_addons
            id: <another_provider_id>
          links:
            first:
            last:
            prev:
            next:
            meta:
              total: 2
              per_page: 10
